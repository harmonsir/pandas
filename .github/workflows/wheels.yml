# Workflow to build wheels for upload to PyPI.
# Inspired by numpy's cibuildwheel config https://github.com/numpy/numpy/blob/main/.github/workflows/wheels.yml
#
# In an attempt to save CI resources, wheel builds do
# not run on each push but only weekly and for releases.
# Wheel builds can be triggered from the Actions page
# (if you have the permissions) on a commit to main.
#
# Alternatively, you can add labels to the pull request in order to trigger wheel
# builds.
# The label(s) that trigger builds are:
# - Build
name: Wheel builder

on:
  push:
  workflow_dispatch:

concurrency:
  group: "dev"
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-22.04
    env:
      IS_PUSH: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      IS_SCHEDULE_DISPATCH: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    outputs:
      sdist_file: ${{ steps.save-path.outputs.sdist_name }}
    steps:
      - name: Checkout pandas
        uses: actions/checkout@v4
        with:
#          ref: 'v2.1.1'
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 'pypy3.9'

      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist
      - uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: ./dist/*

      - name: Sanity check sdist files
        run: |
          ls ./dist
      - name: Output sdist name
        id: save-path
        shell: bash -el {0}
        run: echo "sdist_name=$(ls ./dist)" >> "$GITHUB_OUTPUT"


  build_wheels:
    needs: build_sdist
    runs-on: windows-2022

    env:
      IS_PUSH: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      IS_SCHEDULE_DISPATCH: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout pandas
        uses: actions/checkout@v4
        with:
#          ref: 'v2.1.1'
          fetch-depth: 0

      - name: Download sdist (not macOS)
        #if: ${{ matrix.buildplat[1] != 'macosx_*' }}
        uses: actions/download-artifact@v3
        with:
          name: sdist
          path: ./dist

      - name: Output sdist name (macOS)
        id: save-path
        shell: bash -el {0}
        run: echo "sdist_name=$(ls ./dist)" >> "$GITHUB_ENV"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 'pypy3.9'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        env:
          CIBW_ARCHS: AMD64
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_BUILD: pp39-win_amd64
        run: python -m cibuildwheel --output-dir wheelhouse

#      - name: Build wheels
#        uses: pypa/cibuildwheel@v2.16.2
#        with:
#          package-dir: ./dist/${{ needs.build_sdist.outputs.sdist_file }}
##          output-dir: wheelhouse
#        env:
#          CIBW_PRERELEASE_PYTHONS: True
#          CIBW_ARCHS: AMD64
#          CIBW_ARCHS_WINDOWS: AMD64
#          CIBW_BUILD: pp39-win_amd64
#          CIBW_TEST_SKIP: "*win*"
#          PANDAS_CI: 0

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
