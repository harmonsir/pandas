name: Wheel builder

on:
  push:
  workflow_dispatch:

concurrency:
  group: "dev"
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-22.04
    env:
      IS_PUSH: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      IS_SCHEDULE_DISPATCH: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    outputs:
      sdist_file: ${{ steps.save-path.outputs.sdist_name }}
    steps:
      - name: Checkout pandas
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 'pypy3.9'

      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist

      - uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: ./dist/*

      - name: Sanity check sdist files
        run: |
          ls ./dist

      - name: Output sdist name
        id: save-path
        shell: bash -el {0}
        run: echo "sdist_name=$(ls ./dist)" >> "$GITHUB_OUTPUT"

  build_wheels:
    needs: build_sdist
    name: Build wheel for ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      fail-fast: false
      matrix:
        # GitHub Actions doesn't support pairing matrix values together, let's improvise
        # https://github.com/github/feedback/discussions/7835#discussioncomment-1769026
        buildplat:
        - [windows-2022, win_amd64]
        # TODO: support PyPy?
        python: [["pp39", "3.9"]]
    env:
      IS_PUSH: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      IS_SCHEDULE_DISPATCH: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout pandas
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      # TODO: Build wheels from sdist again
      # There's some sort of weird race condition?
      # within Github that makes the sdist be missing files

      # We need to build wheels from the sdist since the sdist
      # removes unnecessary files from the release
      - name: Download sdist (not macOS)
        #if: ${{ matrix.buildplat[1] != 'macosx_*' }}
        uses: actions/download-artifact@v3
        with:
          name: sdist
          path: ./dist

      - name: Output sdist name (macOS)
        id: save-path
        shell: bash -el {0}
        run: echo "sdist_name=$(ls ./dist)" >> "$GITHUB_ENV"

      # Python version used to build sdist doesn't matter
      # wheel will be built from sdist with the correct version
      - name: Unzip sdist (macOS)
        run: |
          tar -xzf ./dist/${{ env.sdist_name }} -C ./dist

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 'pypy3.9'

      - name: Install cibuildwheel
        run: |
          python.exe -m pip install --upgrade pip
          python -m pip install -q cibuildwheel==2.16.2 wheel
          pip install https://files.pythonhosted.org/packages/be/13/28dad1f91605d519b6899f7a26ab61938ecbd9e1770e219e7030b15d58e4/numpy-1.26.1-pp39-pypy39_pp73-win_amd64.whl

      - name: Build wheels
        env:
          CIBW_PLATFORM: windows
          CIBW_ARCHS: AMD64
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_BUILD: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}
        run: |
          ls
          ls dist/$GITHUB_ENV
          pip install -q -r requirements-dev.txt
          python setup.py bdist_wheel
          python -m cibuildwheel --output-dir wheelhouse ./dist/${{ needs.build_sdist.outputs.sdist_file }}

#      - name: Build wheels
#        uses: pypa/cibuildwheel@v2.16.2
#        with:
#         package-dir: ./dist/${{ matrix.buildplat[1] == 'macosx_*' && env.sdist_name || needs.build_sdist.outputs.sdist_file }}
#        env:
#          CIBW_PRERELEASE_PYTHONS: True
#          CIBW_BUILD: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}


      - name: Validate wheel RECORD
        shell: bash -el {0}
        run: for whl in $(ls wheelhouse); do wheel unpack wheelhouse/$whl -d /tmp; done

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.python[0] }}-${{ startsWith(matrix.buildplat[1], 'macosx') && 'macosx' || matrix.buildplat[1] }}
          path: |
            ./wheelhouse/*.whl
            ./*.whl
